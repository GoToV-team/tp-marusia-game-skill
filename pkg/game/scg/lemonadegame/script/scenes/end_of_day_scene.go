// Code generated by scg 1, .
//
// LemonadeGame-SceneStructs
//
// Command:
// scg
//.

package scenes

import (
	base_matchers "github.com/ThCompiler/go_game_constractor/director/matchers"
	"github.com/ThCompiler/go_game_constractor/director/scene"
	"github.com/evrone/go-clean-template/pkg/game/scg/lemonadegame/manager"
	"github.com/evrone/go-clean-template/pkg/game/scg/lemonadegame/script/errors"
)

const (
	// AgreeEndOfDayButtonText - text for button Agree
	AgreeEndOfDayButtonText = "Да"
	// BackEndOfDayButtonText - text for button Back
	BackEndOfDayButtonText = "Нет"
)

// EndOfDay scene
type EndOfDay struct {
	TextManager manager.TextManager
	NextScene   SceneName
}

// React function of actions after scene has been played
func (sc *EndOfDay) React(ctx *scene.Context) scene.Command {
	// TODO Write the actions after EndOfDay scene has been played
	switch {
	// Buttons select
	case ctx.Request.NameMatched == AgreeEndOfDayButtonText && ctx.Request.WasButton:

	case ctx.Request.NameMatched == BackEndOfDayButtonText && ctx.Request.WasButton:

		// Matcher select
	case ctx.Request.NameMatched == base_matchers.AgreeMatchedString:

	}

	sc.NextScene = EndOfDayScene // TODO: manually set next scene after reaction
	return scene.NoCommand
}

// Next function returning next scene
func (sc *EndOfDay) Next() scene.Scene {
	switch sc.NextScene {
	case NewDayScene:
		return &NewDay{
			TextManager: sc.TextManager,
		}
	case EndGameScene:
		return &EndGame{
			TextManager: sc.TextManager,
		}
	}

	return &EndOfDay{
		TextManager: sc.TextManager,
	}
}

// GetSceneInfo function returning info about scene
func (sc *EndOfDay) GetSceneInfo(_ *scene.Context) (scene.Info, bool) {
	var (
		balance     uint64
		livesCount  uint64
		petalsCount uint64
	)

	// TODO Write some actions for get data for texts

	text, _ := sc.TextManager.GetEndOfDayText(
		balance,
		livesCount,
		petalsCount,
	)
	return scene.Info{
		Text: text,
		ExpectedMessages: []scene.MessageMatcher{
			base_matchers.Agree,
		},
		Buttons: []scene.Button{
			{
				Title: AgreeEndOfDayButtonText,
			},
			{
				Title: BackEndOfDayButtonText,
			},
		},
		Err: errors.NotUnderstandEndOfDayError,
	}, true
}
