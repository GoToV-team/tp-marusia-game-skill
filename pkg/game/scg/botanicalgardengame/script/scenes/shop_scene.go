// Code generated by scg 1, .
//
// BotanicalGardenGame-SceneStructs
//
// Command:
// scg
//.

package scenes

import (
	"github.com/ThCompiler/go_game_constractor/director/scene"
	"github.com/evrone/go-clean-template/pkg/game/scg/botanicalgardengame/manager"
	"github.com/evrone/go-clean-template/pkg/game/scg/botanicalgardengame/script/errors"
	"github.com/evrone/go-clean-template/pkg/game/scg/botanicalgardengame/script/matchers"
)

const (
	// BuyBugsShopButtonText - text for button BuyBugs
	BuyBugsShopButtonText = "Купить защиту от жуков"
	// BuyFlyShopButtonText - text for button BuyFly
	BuyFlyShopButtonText = "Купить защиту от ветра"
	// BuyGreenhouseShopButtonText - text for button BuyGreenhouse
	BuyGreenhouseShopButtonText = "Купить теплицу"
	// BuyHealShopButtonText - text for button BuyHeal
	BuyHealShopButtonText = "Купить аптечку"
	// EndShopShopButtonText - text for button EndShop
	EndShopShopButtonText = "Закончить покупки"
	// BuyDropsShopButtonText - text for button BuyDrops
	BuyDropsShopButtonText = "Купить капель"
)

// Shop scene
type Shop struct {
	TextManager manager.TextManager
	NextScene   SceneName
}

// React function of actions after scene has been played
func (sc *Shop) React(ctx *scene.Context) scene.Command {
	switch {
	// Buttons select
	case ctx.Request.NameMatched == BuyBugsShopButtonText && ctx.Request.WasButton:
		sc.NextScene = BugsSaleScene
	case ctx.Request.NameMatched == BuyFlyShopButtonText && ctx.Request.WasButton:
		sc.NextScene = FlySaleScene
	case ctx.Request.NameMatched == BuyGreenhouseShopButtonText && ctx.Request.WasButton:
		sc.NextScene = GreenhouseSaleScene
	case ctx.Request.NameMatched == BuyHealShopButtonText && ctx.Request.WasButton:
		sc.NextScene = HealSaleScene
	case ctx.Request.NameMatched == EndShopShopButtonText && ctx.Request.WasButton:
		sc.NextScene = ApproveEndDayScene
	case ctx.Request.NameMatched == BuyDropsShopButtonText && ctx.Request.WasButton:
		sc.NextScene = DropsSaleScene
		// Matcher select
	case ctx.Request.NameMatched == matchers.BuyDropsMatchedString:
		sc.NextScene = DropsSaleScene
	case ctx.Request.NameMatched == matchers.BuyGreenhouseMatchedString:
		sc.NextScene = GreenhouseSaleScene
	case ctx.Request.NameMatched == matchers.BuyFlyMatchedString:
		sc.NextScene = FlySaleScene
	case ctx.Request.NameMatched == matchers.BuyBugsMatchedString:
		sc.NextScene = BugsSaleScene
	case ctx.Request.NameMatched == matchers.BuyHealMatchedString:
		sc.NextScene = HealSaleScene
	case ctx.Request.NameMatched == matchers.EndShopMatchedString:
		sc.NextScene = ApproveEndDayScene
	}

	return scene.NoCommand
}

// Next function returning next scene
func (sc *Shop) Next() scene.Scene {
	switch sc.NextScene {
	case DropsSaleScene:
		return &DropsSale{
			TextManager: sc.TextManager,
		}
	case GreenhouseSaleScene:
		return &GreenhouseSale{
			TextManager: sc.TextManager,
		}
	case FlySaleScene:
		return &FlySale{
			TextManager: sc.TextManager,
		}
	case BugsSaleScene:
		return &BugsSale{
			TextManager: sc.TextManager,
		}
	case HealSaleScene:
		return &HealSale{
			TextManager: sc.TextManager,
		}
	case ApproveEndDayScene:
		return &ApproveEndDay{
			TextManager: sc.TextManager,
		}
	}

	return &Shop{
		TextManager: sc.TextManager,
	}
}

// GetSceneInfo function returning info about scene
func (sc *Shop) GetSceneInfo(_ *scene.Context) (scene.Info, bool) {
	var (
		bugsCost       uint64
		flyCost        uint64
		greenhouseCost uint64
		healCost       uint64
	)

	text, _ := sc.TextManager.GetShopText(
		bugsCost,
		flyCost,
		greenhouseCost,
		healCost,
	)
	return scene.Info{
		Text: text,
		ExpectedMessages: []scene.MessageMatcher{
			matchers.BuyDropsMatcher,
			matchers.BuyGreenhouseMatcher,
			matchers.BuyFlyMatcher,
			matchers.BuyBugsMatcher,
			matchers.BuyHealMatcher,
			matchers.EndShopMatcher,
		},
		Buttons: []scene.Button{
			{
				Title: BuyBugsShopButtonText,
			},
			{
				Title: BuyFlyShopButtonText,
			},
			{
				Title: BuyGreenhouseShopButtonText,
			},
			{
				Title: BuyHealShopButtonText,
			},
			{
				Title: EndShopShopButtonText,
			},
			{
				Title: BuyDropsShopButtonText,
			},
		},
		Err: errors.YouAboutWhatError,
	}, true
}
